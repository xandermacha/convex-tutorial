services:
  db:
    image: postgres
    restart: always
    # set shared memory limit when using docker compose
    # shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB:  ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    restart: always
    # stop_grace_period: 10s
    # stop_signal: SIGINT
    ports:
      - "${PORT:-3210}:3210"
      - "${SITE_PROXY_PORT:-3211}:3211"
    volumes:
      - data:/convex/data
      - ./convex:/convex/convex
    environment:
      - DISABLE_BEACON=${DISABLE_BEACON}
      - INSTANCE_NAME=${INSTANCE_NAME:-}
      - INSTANCE_SECRET=${INSTANCE_SECRET:-}
      - CONVEX_RELEASE_VERSION_DEV=${CONVEX_RELEASE_VERSION_DEV:-}
      - ACTIONS_USER_TIMEOUT_SECS=${ACTIONS_USER_TIMEOUT_SECS:-}
      - CONVEX_CLOUD_ORIGIN=${CONVEX_CLOUD_ORIGIN:-http://127.0.0.1:${PORT:-3210}}
      - CONVEX_SITE_ORIGIN=${CONVEX_SITE_ORIGIN:-http://127.0.0.1:${SITE_PROXY_PORT:-3211}}
      - DISABLE_BEACON=${DISABLE_BEACON:-}
      - REDACT_LOGS_TO_CLIENT=${REDACT_LOGS_TO_CLIENT:-}
      - POSTGRES_URL=${POSTGRES_URL}
      - DO_NOT_REQUIRE_SSL=${DO_NOT_REQUIRE_SSL}
      - MYSQL_URL=${MYSQL_URL:-}
      - RUST_LOG=${RUST_LOG:-info}
      - RUST_BACKTRACE=${RUST_BACKTRACE:-}
      - AWS_REGION=${AWS_REGION:-}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN:-}
      - S3_STORAGE_EXPORTS_BUCKET=${S3_STORAGE_EXPORTS_BUCKET:-}
      - S3_STORAGE_SNAPSHOT_IMPORTS_BUCKET=${S3_STORAGE_SNAPSHOT_IMPORTS_BUCKET:-}
      - S3_STORAGE_MODULES_BUCKET=${S3_STORAGE_MODULES_BUCKET:-}
      - S3_STORAGE_FILES_BUCKET=${S3_STORAGE_FILES_BUCKET:-}
      - S3_STORAGE_SEARCH_BUCKET=${S3_STORAGE_SEARCH_BUCKET:-}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL:-}

    healthcheck:
      test: curl -f http://localhost:3210/version
      interval: 5s
      start_period: 10s

    depends_on:
      db:
        condition: service_healthy
  # backend:
  #   image: ghcr.io/get-convex/convex-backend:6efab6f2b6c182b90255774d747328cfc7b80dd9
  #   stop_grace_period: 10s
  #   stop_signal: SIGINT
  #   ports:
  #     - "${PORT:-3210}:3210"
  #     - "${SITE_PROXY_PORT:-3211}:3211"
  #   volumes:
  #     - data:/convex/data
  #   environment:
  #     - DISABLE_BEACON=${DISABLE_BEACON}
  #     - INSTANCE_NAME=${INSTANCE_NAME:-}
  #     - INSTANCE_SECRET=${INSTANCE_SECRET:-}
  #     - CONVEX_RELEASE_VERSION_DEV=${CONVEX_RELEASE_VERSION_DEV:-}
  #     - ACTIONS_USER_TIMEOUT_SECS=${ACTIONS_USER_TIMEOUT_SECS:-}
  #     - CONVEX_CLOUD_ORIGIN=${CONVEX_CLOUD_ORIGIN:-http://127.0.0.1:${PORT:-3210}}
  #     - CONVEX_SITE_ORIGIN=${CONVEX_SITE_ORIGIN:-http://127.0.0.1:${SITE_PROXY_PORT:-3211}}
  #     - DISABLE_BEACON=${DISABLE_BEACON:-}
  #     - REDACT_LOGS_TO_CLIENT=${REDACT_LOGS_TO_CLIENT:-}
  #     - POSTGRES_URL=${POSTGRES_URL}
  #     - DO_NOT_REQUIRE_SSL=${DO_NOT_REQUIRE_SSL}
  #     - MYSQL_URL=${MYSQL_URL:-}
  #     - RUST_LOG=${RUST_LOG:-info}
  #     - RUST_BACKTRACE=${RUST_BACKTRACE:-}
  #     - AWS_REGION=${AWS_REGION:-}
  #     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
  #     - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
  #     - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN:-}
  #     - S3_STORAGE_EXPORTS_BUCKET=${S3_STORAGE_EXPORTS_BUCKET:-}
  #     - S3_STORAGE_SNAPSHOT_IMPORTS_BUCKET=${S3_STORAGE_SNAPSHOT_IMPORTS_BUCKET:-}
  #     - S3_STORAGE_MODULES_BUCKET=${S3_STORAGE_MODULES_BUCKET:-}
  #     - S3_STORAGE_FILES_BUCKET=${S3_STORAGE_FILES_BUCKET:-}
  #     - S3_STORAGE_SEARCH_BUCKET=${S3_STORAGE_SEARCH_BUCKET:-}
  #     - S3_ENDPOINT_URL=${S3_ENDPOINT_URL:-}

  #   healthcheck:
  #     test: curl -f http://localhost:3210/version
  #     interval: 5s
  #     start_period: 10s

  #   depends_on:
  #     db:
  #       condition: service_healthy

  dashboard:
    image: ghcr.io/get-convex/convex-dashboard:6efab6f2b6c182b90255774d747328cfc7b80dd9
    stop_grace_period: 10s
    stop_signal: SIGINT
    ports:
      - "${DASHBOARD_PORT:-6791}:6791"
    environment:
      - NEXT_PUBLIC_DEPLOYMENT_URL=${NEXT_PUBLIC_DEPLOYMENT_URL:-http://127.0.0.1:${PORT:-3210}}
    depends_on:
      backend:
        condition: service_healthy
  ourfiles-frontend:
      build:
        context: .
        args:
          - VITE_CONVEX_URL=http://${HOST_IP:-127.0.0.1}:${PORT:-3210}
          - VITE_CONVEX_DASHBOARD_URL=http://${HOST_IP:-127.0.0.1}:${DASHBOARD_PORT:-6791}
      restart: always
      ports:
        - "5173:80"
      environment:
        - VITE_CONVEX_URL=http://${HOST_IP:-127.0.0.1}:${PORT:-3210}
        - VITE_CONVEX_DASHBOARD_URL=http://${HOST_IP:-127.0.0.1}:${DASHBOARD_PORT:-6791}
      depends_on:
        backend:
          condition: service_healthy

  adminer:
    image: adminer
    restart: always
    ports:
      - "8282:8080"
    depends_on:
      db:
        condition: service_started

volumes:
  data: